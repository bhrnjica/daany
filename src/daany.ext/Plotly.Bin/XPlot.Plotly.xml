<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>XPlot.Plotly</name></assembly>
<members>
<member name="P:XPlot.Plotly.Angularaxis.visible(System.Boolean)">
<summary>
 Determines whether or not this axis will be visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.ticksuffix(System.String)">
<summary>
 Sets the length of the tick lines on this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.tickorientation(System.Object)">
<summary>
 Sets the orientation (from the paper perspective) of the angular axis tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.ticklen(System.Double)">
<summary>
 Sets the length of the tick lines on this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.tickcolor(System.String)">
<summary>
 Sets the color of the tick lines on this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.showticklabels(System.Boolean)">
<summary>
 Determines whether or not the angular axis ticks will feature tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.showline(System.Boolean)">
<summary>
 Determines whether or not the line bounding this angular axis will be shown on the figure.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.range(System.Object)">
<summary>
 Defines the start and end point of this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.domain(System.Object)">
<summary>
 Polar chart subplots are not supported yet. This key has currently no effect.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.visible">
<summary>
 Determines whether or not this axis will be visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.ticksuffix">
<summary>
 Sets the length of the tick lines on this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.tickorientation">
<summary>
 Sets the orientation (from the paper perspective) of the angular axis tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.ticklen">
<summary>
 Sets the length of the tick lines on this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.tickcolor">
<summary>
 Sets the color of the tick lines on this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.showticklabels">
<summary>
 Determines whether or not the angular axis ticks will feature tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.showline">
<summary>
 Determines whether or not the line bounding this angular axis will be shown on the figure.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.range">
<summary>
 Defines the start and end point of this angular axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Angularaxis.domain">
<summary>
 Polar chart subplots are not supported yet. This key has currently no effect.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.visible(System.Boolean)">
<summary>
 Determines whether or not this axis will be visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.ticksuffix(System.String)">
<summary>
 Sets the length of the tick lines on this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.tickorientation(System.Object)">
<summary>
 Sets the orientation (from the paper perspective) of the radial axis tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.ticklen(System.Double)">
<summary>
 Sets the length of the tick lines on this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.tickcolor(System.String)">
<summary>
 Sets the color of the tick lines on this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.showticklabels(System.Boolean)">
<summary>
 Determines whether or not the radial axis ticks will feature tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.showline(System.Boolean)">
<summary>
 Determines whether or not the line bounding this radial axis will be shown on the figure.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.range(System.Object)">
<summary>
 Defines the start and end point of this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.orientation(System.Double)">
<summary>
 Sets the orientation (an angle with respect to the origin) of the radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.domain(System.Object)">
<summary>
 Polar chart subplots are not supported yet. This key has currently no effect.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.visible">
<summary>
 Determines whether or not this axis will be visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.ticksuffix">
<summary>
 Sets the length of the tick lines on this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.tickorientation">
<summary>
 Sets the orientation (from the paper perspective) of the radial axis tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.ticklen">
<summary>
 Sets the length of the tick lines on this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.tickcolor">
<summary>
 Sets the color of the tick lines on this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.showticklabels">
<summary>
 Determines whether or not the radial axis ticks will feature tick labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.showline">
<summary>
 Determines whether or not the line bounding this radial axis will be shown on the figure.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.range">
<summary>
 Defines the start and end point of this radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.orientation">
<summary>
 Sets the orientation (an angle with respect to the origin) of the radial axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Radialaxis.domain">
<summary>
 Polar chart subplots are not supported yet. This key has currently no effect.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.tick0(System.Double)">
<summary>
 Sets the graticule&apos;s starting tick longitude/latitude.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.showgrid(System.Boolean)">
<summary>
 Sets whether or not graticule are shown on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.range(System.Object)">
<summary>
 Sets the range of this axis (in degrees).
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.gridwidth(System.Double)">
<summary>
 Sets the graticule&apos;s stroke width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.gridcolor(System.String)">
<summary>
 Sets the graticule&apos;s stroke color.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.dtick(System.Double)">
<summary>
 Sets the graticule&apos;s longitude/latitude tick step.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.tick0">
<summary>
 Sets the graticule&apos;s starting tick longitude/latitude.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.showgrid">
<summary>
 Sets whether or not graticule are shown on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.range">
<summary>
 Sets the range of this axis (in degrees).
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.gridwidth">
<summary>
 Sets the graticule&apos;s stroke width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.gridcolor">
<summary>
 Sets the graticule&apos;s stroke color.
</summary>
</member>
<member name="P:XPlot.Plotly.Lataxis.dtick">
<summary>
 Sets the graticule&apos;s longitude/latitude tick step.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.tick0(System.Double)">
<summary>
 Sets the graticule&apos;s starting tick longitude/latitude.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.showgrid(System.Boolean)">
<summary>
 Sets whether or not graticule are shown on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.range(System.Object)">
<summary>
 Sets the range of this axis (in degrees).
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.gridwidth(System.Double)">
<summary>
 Sets the graticule&apos;s stroke width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.gridcolor(System.String)">
<summary>
 Sets the graticule&apos;s stroke color.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.dtick(System.Double)">
<summary>
 Sets the graticule&apos;s longitude/latitude tick step.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.tick0">
<summary>
 Sets the graticule&apos;s starting tick longitude/latitude.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.showgrid">
<summary>
 Sets whether or not graticule are shown on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.range">
<summary>
 Sets the range of this axis (in degrees).
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.gridwidth">
<summary>
 Sets the graticule&apos;s stroke width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.gridcolor">
<summary>
 Sets the graticule&apos;s stroke color.
</summary>
</member>
<member name="P:XPlot.Plotly.Lonaxis.dtick">
<summary>
 Sets the graticule&apos;s longitude/latitude tick step.
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.t(System.Double)">
<summary>
 Sets the top margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.r(System.Double)">
<summary>
 Sets the right margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.pad(System.Double)">
<summary>
 Sets the amount of padding (in px) between the plotting area and the axis lines
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.l(System.Double)">
<summary>
 Sets the left margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.b(System.Double)">
<summary>
 Sets the bottom margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.t">
<summary>
 Sets the top margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.r">
<summary>
 Sets the right margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.pad">
<summary>
 Sets the amount of padding (in px) between the plotting area and the axis lines
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.l">
<summary>
 Sets the left margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Margin.b">
<summary>
 Sets the bottom margin (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Trace.name(System.String)">
<summary>
 Sets the trace name. The trace name appear as the legend item and on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Trace.name">
<summary>
 Sets the trace name. The trace name appear as the legend item and on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Font.family(System.String)">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Font.family">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.yanchor(System.Object)">
<summary>
 Sets the legend&apos;s vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.y(System.Double)">
<summary>
 Sets the y position (in normalized coordinates) of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.xanchor(System.Object)">
<summary>
 Sets the legend&apos;s horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.x(System.Double)">
<summary>
 Sets the x position (in normalized coordinates) of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.traceorder(System.String)">
<summary>
 Determines the order at which the legend items are displayed. If *normal*, the items are displayed top-to-bottom in the same order as the input data. If *reversed*, the items are displayed in the opposite order as *normal*. If *grouped*, the items are displayed in groups (when a trace `legendgroup` is provided). if *grouped+reversed*, the items are displayed in the opposite order as *grouped*.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.tracegroupgap(System.Double)">
<summary>
 Sets the amount of vertical space (in px) between legend groups.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.orientation(System.String)">
<summary>
 Set horizontal *h* or vertical *v* orientation of legend
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.borderwidth(System.Double)">
<summary>
 Sets the width (in px) of the border enclosing the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.bordercolor(System.String)">
<summary>
 Sets the color of the border enclosing the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.bgcolor(System.String)">
<summary>
 Sets the legend background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.yanchor">
<summary>
 Sets the legend&apos;s vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.y">
<summary>
 Sets the y position (in normalized coordinates) of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.xanchor">
<summary>
 Sets the legend&apos;s horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.x">
<summary>
 Sets the x position (in normalized coordinates) of the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.traceorder">
<summary>
 Determines the order at which the legend items are displayed. If *normal*, the items are displayed top-to-bottom in the same order as the input data. If *reversed*, the items are displayed in the opposite order as *normal*. If *grouped*, the items are displayed in groups (when a trace `legendgroup` is provided). if *grouped+reversed*, the items are displayed in the opposite order as *grouped*.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.tracegroupgap">
<summary>
 Sets the amount of vertical space (in px) between legend groups.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.orientation">
<summary>
 Set horizontal *h* or vertical *v* orientation of legend
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.borderwidth">
<summary>
 Sets the width (in px) of the border enclosing the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.bordercolor">
<summary>
 Sets the color of the border enclosing the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Legend.bgcolor">
<summary>
 Sets the legend background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.yref(System.Object)">
<summary>
 Sets the annotation&apos;s y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.yanchor(System.Object)">
<summary>
 Sets the annotation&apos;s vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation. For example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the top-most portion of the annotation lines up with the top-most edge of the plotting area. If *auto*, the anchor is equivalent to *middle* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.y(System.Object)">
<summary>
 Sets the annotation&apos;s y position. Note that dates and categories are converted to numbers.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.xref(System.Object)">
<summary>
 Sets the annotation&apos;s x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.xanchor(System.Object)">
<summary>
 Sets the annotation&apos;s horizontal position anchor This anchor binds the `x` position to the *left*, *center* or *right* of the annotation. For example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the right-most portion of the annotation lines up with the right-most edge of the plotting area. If *auto*, the anchor is equivalent to *center* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.x(System.Object)">
<summary>
 Sets the annotation&apos;s x position. Note that dates and categories are converted to numbers.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.textangle(System.Double)">
<summary>
 Sets the angle at which the `text` is drawn with respect to the horizontal.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.text(System.String)">
<summary>
 Sets the text associated with this annotation. Plotly uses a subset of HTML tags to do things like newline (&lt;br&gt;), bold (&lt;b&gt;&lt;/b&gt;), italics (&lt;i&gt;&lt;/i&gt;), hyperlinks (&lt;a href=&apos;...&apos;&gt;&lt;/a&gt;). Tags &lt;em&gt;, &lt;sup&gt;, &lt;sub&gt; &lt;span&gt; are also supported.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.showarrow(System.Boolean)">
<summary>
 Determines whether or not the annotation is drawn with an arrow. If *true*, `text` is placed near the arrow&apos;s tail. If *false*, `text` lines up with the `x` and `y` provided.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.opacity(System.Double)">
<summary>
 Sets the opacity of the annotation (text + arrow).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.borderwidth(System.Double)">
<summary>
 Sets the width (in px) of the border enclosing the annotation `text`.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.borderpad(System.Double)">
<summary>
 Sets the padding (in px) between the `text` and the enclosing border.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.bordercolor(System.String)">
<summary>
 Sets the color of the border enclosing the annotation `text`.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.bgcolor(System.String)">
<summary>
 Sets the background color of the annotation.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.ayref(System.Object)">
<summary>
 Sets the annotation&apos;s ay coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `ay` position refers to an y coordinate If set to *paper*, the `ay` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.ay(System.Double)">
<summary>
 Sets the y component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from bottom to top (top to bottom)
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.axref(System.Object)">
<summary>
 Sets the annotation&apos;s ax coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `ax` position refers to an x coordinate If set to *paper*, the `ax` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.ax(System.Double)">
<summary>
 Sets the x component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from right to left (left to right)
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowwidth(System.Double)">
<summary>
 Sets the width (in px) of annotation arrow.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowsize(System.Double)">
<summary>
 Sets the size (in px) of annotation arrow head.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowhead(System.Int32)">
<summary>
 Sets the annotation arrow head style.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowcolor(System.String)">
<summary>
 Sets the color of the annotation arrow.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.align(System.Object)">
<summary>
 Sets the vertical alignment of the `text` with respect to the set `x` and `y` position. Has only an effect if `text` spans more two or more lines (i.e. `text` contains one or more &lt;br&gt; HTML tags).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.yref">
<summary>
 Sets the annotation&apos;s y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.yanchor">
<summary>
 Sets the annotation&apos;s vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation. For example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the top-most portion of the annotation lines up with the top-most edge of the plotting area. If *auto*, the anchor is equivalent to *middle* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.y">
<summary>
 Sets the annotation&apos;s y position. Note that dates and categories are converted to numbers.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.xref">
<summary>
 Sets the annotation&apos;s x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.xanchor">
<summary>
 Sets the annotation&apos;s horizontal position anchor This anchor binds the `x` position to the *left*, *center* or *right* of the annotation. For example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the right-most portion of the annotation lines up with the right-most edge of the plotting area. If *auto*, the anchor is equivalent to *center* for data-referenced annotations whereas for paper-referenced, the anchor picked corresponds to the closest side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.x">
<summary>
 Sets the annotation&apos;s x position. Note that dates and categories are converted to numbers.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.textangle">
<summary>
 Sets the angle at which the `text` is drawn with respect to the horizontal.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.text">
<summary>
 Sets the text associated with this annotation. Plotly uses a subset of HTML tags to do things like newline (&lt;br&gt;), bold (&lt;b&gt;&lt;/b&gt;), italics (&lt;i&gt;&lt;/i&gt;), hyperlinks (&lt;a href=&apos;...&apos;&gt;&lt;/a&gt;). Tags &lt;em&gt;, &lt;sup&gt;, &lt;sub&gt; &lt;span&gt; are also supported.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.showarrow">
<summary>
 Determines whether or not the annotation is drawn with an arrow. If *true*, `text` is placed near the arrow&apos;s tail. If *false*, `text` lines up with the `x` and `y` provided.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.opacity">
<summary>
 Sets the opacity of the annotation (text + arrow).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.borderwidth">
<summary>
 Sets the width (in px) of the border enclosing the annotation `text`.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.borderpad">
<summary>
 Sets the padding (in px) between the `text` and the enclosing border.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.bordercolor">
<summary>
 Sets the color of the border enclosing the annotation `text`.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.bgcolor">
<summary>
 Sets the background color of the annotation.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.ayref">
<summary>
 Sets the annotation&apos;s ay coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `ay` position refers to an y coordinate If set to *paper*, the `ay` position refers to the distance from the bottom of the plotting area in normalized coordinates where 0 (1) corresponds to the bottom (top).
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.ay">
<summary>
 Sets the y component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from bottom to top (top to bottom)
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.axref">
<summary>
 Sets the annotation&apos;s ax coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `ax` position refers to an x coordinate If set to *paper*, the `ax` position refers to the distance from the left side of the plotting area in normalized coordinates where 0 (1) corresponds to the left (right) side.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.ax">
<summary>
 Sets the x component of the arrow tail about the arrow head. A positive (negative) component corresponds to an arrow pointing from right to left (left to right)
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowwidth">
<summary>
 Sets the width (in px) of annotation arrow.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowsize">
<summary>
 Sets the size (in px) of annotation arrow head.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowhead">
<summary>
 Sets the annotation arrow head style.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.arrowcolor">
<summary>
 Sets the color of the annotation arrow.
</summary>
</member>
<member name="P:XPlot.Plotly.Annotation.align">
<summary>
 Sets the vertical alignment of the `text` with respect to the set `x` and `y` position. Has only an effect if `text` spans more two or more lines (i.e. `text` contains one or more &lt;br&gt; HTML tags).
</summary>
</member>
<member name="P:XPlot.Plotly.Rotation.roll(System.Double)">
<summary>
 Roll the map (in degrees) For example, a roll of *180* makes the map appear upside down.
</summary>
</member>
<member name="P:XPlot.Plotly.Rotation.lon(System.Double)">
<summary>
 Rotates the map along parallels (in degrees East).
</summary>
</member>
<member name="P:XPlot.Plotly.Rotation.lat(System.Double)">
<summary>
 Rotates the map along meridians (in degrees North).
</summary>
</member>
<member name="P:XPlot.Plotly.Rotation.roll">
<summary>
 Roll the map (in degrees) For example, a roll of *180* makes the map appear upside down.
</summary>
</member>
<member name="P:XPlot.Plotly.Rotation.lon">
<summary>
 Rotates the map along parallels (in degrees East).
</summary>
</member>
<member name="P:XPlot.Plotly.Rotation.lat">
<summary>
 Rotates the map along meridians (in degrees North).
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.width(System.Double)">
<summary>
 Sets the width (in px) of the cross-bar at both ends of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.visible(System.Boolean)">
<summary>
 Determines whether or not this set of error bars is visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.valueminus(System.Double)">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.value(System.Double)">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.type(System.Object)">
<summary>
 Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.thickness(System.Double)">
<summary>
 Sets the thickness (in px) of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.symmetric(System.Boolean)">
<summary>
 Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.color(System.String)">
<summary>
 Sets the stoke color of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.arraysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  array .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.arrayminussrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  arrayminus .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.arrayminus(System.Object)">
<summary>
 Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.array(System.Object)">
<summary>
 Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.width">
<summary>
 Sets the width (in px) of the cross-bar at both ends of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.visible">
<summary>
 Determines whether or not this set of error bars is visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.valueminus">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.value">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.type">
<summary>
 Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.thickness">
<summary>
 Sets the thickness (in px) of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.symmetric">
<summary>
 Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.color">
<summary>
 Sets the stoke color of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.arraysrc">
<summary>
 Sets the source reference on plot.ly for  array .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.arrayminussrc">
<summary>
 Sets the source reference on plot.ly for  arrayminus .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.arrayminus">
<summary>
 Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_x.array">
<summary>
 Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.width(System.Double)">
<summary>
 Sets the width (in px) of the cross-bar at both ends of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.visible(System.Boolean)">
<summary>
 Determines whether or not this set of error bars is visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.valueminus(System.Double)">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.value(System.Double)">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.type(System.Object)">
<summary>
 Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.thickness(System.Double)">
<summary>
 Sets the thickness (in px) of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.symmetric(System.Boolean)">
<summary>
 Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.color(System.String)">
<summary>
 Sets the stoke color of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.arraysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  array .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.arrayminussrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  arrayminus .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.arrayminus(System.Object)">
<summary>
 Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.array(System.Object)">
<summary>
 Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.width">
<summary>
 Sets the width (in px) of the cross-bar at both ends of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.visible">
<summary>
 Determines whether or not this set of error bars is visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.valueminus">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.value">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.type">
<summary>
 Determines the rule used to generate the error bars. If *constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.thickness">
<summary>
 Sets the thickness (in px) of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.symmetric">
<summary>
 Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.color">
<summary>
 Sets the stoke color of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.arraysrc">
<summary>
 Sets the source reference on plot.ly for  array .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.arrayminussrc">
<summary>
 Sets the source reference on plot.ly for  arrayminus .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.arrayminus">
<summary>
 Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_y.array">
<summary>
 Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.width(System.Double)">
<summary>
 Sets the width (in px) of the cross-bar at both ends of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.visible(System.Boolean)">
<summary>
 Determines whether or not this set of error bars is visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.valueminus(System.Double)">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.value(System.Double)">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.type(System.Object)">
<summary>
 Determines the rule used to generate the error bars. If `constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.thickness(System.Double)">
<summary>
 Sets the thickness (in px) of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.symmetric(System.Boolean)">
<summary>
 Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.color(System.String)">
<summary>
 Sets the stoke color of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.arraysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  array .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.arrayminussrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  arrayminus .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.arrayminus(System.Object)">
<summary>
 Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.array(System.Object)">
<summary>
 Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.width">
<summary>
 Sets the width (in px) of the cross-bar at both ends of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.visible">
<summary>
 Determines whether or not this set of error bars is visible.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.valueminus">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars in the bottom (left) direction for vertical (horizontal) bars
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.value">
<summary>
 Sets the value of either the percentage (if `type` is set to *percent*) or the constant (if `type` is set to *constant*) corresponding to the lengths of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.type">
<summary>
 Determines the rule used to generate the error bars. If `constant`, the bar lengths are of a constant value. Set this constant in `value`. If *percent*, the bar lengths correspond to a percentage of underlying data. Set this percentage in `value`. If *sqrt*, the bar lengths correspond to the sqaure of the underlying data. If *array*, the bar lengths are set with data set `array`.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.thickness">
<summary>
 Sets the thickness (in px) of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.symmetric">
<summary>
 Determines whether or not the error bars have the same length in both direction (top/bottom for vertical bars, left/right for horizontal bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.color">
<summary>
 Sets the stoke color of the error bars.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.arraysrc">
<summary>
 Sets the source reference on plot.ly for  array .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.arrayminussrc">
<summary>
 Sets the source reference on plot.ly for  arrayminus .
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.arrayminus">
<summary>
 Sets the data corresponding the length of each error bar in the bottom (left) direction for vertical (horizontal) bars Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Error_z.array">
<summary>
 Sets the data corresponding the length of each error bar. Values are plotted relative to the underlying data.
</summary>
</member>
<member name="P:XPlot.Plotly.Project.z(System.Boolean)">
<summary>
 Sets whether or not the dynamic contours are projected along the z axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Project.y(System.Boolean)">
<summary>
 Sets whether or not the dynamic contours are projected along the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Project.x(System.Boolean)">
<summary>
 Sets whether or not the dynamic contours are projected along the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Project.z">
<summary>
 Sets whether or not the dynamic contours are projected along the z axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Project.y">
<summary>
 Sets whether or not the dynamic contours are projected along the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Project.x">
<summary>
 Sets whether or not the dynamic contours are projected along the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.X.show(System.Boolean)">
<summary>
 Sets whether or not projections are shown along the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.X.scale(System.Double)">
<summary>
 Sets the scale factor determining the size of the projection marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.X.opacity(System.Double)">
<summary>
 Sets the projection color.
</summary>
</member>
<member name="P:XPlot.Plotly.X.show">
<summary>
 Sets whether or not projections are shown along the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.X.scale">
<summary>
 Sets the scale factor determining the size of the projection marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.X.opacity">
<summary>
 Sets the projection color.
</summary>
</member>
<member name="P:XPlot.Plotly.Y.show(System.Boolean)">
<summary>
 Sets whether or not projections are shown along the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Y.scale(System.Double)">
<summary>
 Sets the scale factor determining the size of the projection marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.Y.opacity(System.Double)">
<summary>
 Sets the projection color.
</summary>
</member>
<member name="P:XPlot.Plotly.Y.show">
<summary>
 Sets whether or not projections are shown along the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Y.scale">
<summary>
 Sets the scale factor determining the size of the projection marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.Y.opacity">
<summary>
 Sets the projection color.
</summary>
</member>
<member name="P:XPlot.Plotly.Z.show(System.Boolean)">
<summary>
 Sets whether or not projections are shown along the z axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Z.scale(System.Double)">
<summary>
 Sets the scale factor determining the size of the projection marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.Z.opacity(System.Double)">
<summary>
 Sets the projection color.
</summary>
</member>
<member name="P:XPlot.Plotly.Z.show">
<summary>
 Sets whether or not projections are shown along the z axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Z.scale">
<summary>
 Sets the scale factor determining the size of the projection marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.Z.opacity">
<summary>
 Sets the projection color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.zerolinewidth(System.Double)">
<summary>
 Sets the width (in px) of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.zerolinecolor(System.String)">
<summary>
 Sets the line color of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.zeroline(System.Boolean)">
<summary>
 Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.type(System.Object)">
<summary>
 Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.title(System.String)">
<summary>
 Sets the title of this axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickwidth(System.Double)">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickvalssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickvals(System.Object)">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticktextsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticktext(System.Object)">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticksuffix(System.String)">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticks(System.Object)">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickprefix(System.String)">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickmode(System.Object)">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticklen(System.Double)">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickformat(System.String)">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickcolor(System.String)">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickangle(System.Double)">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tick0(System.Double)">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.spikethickness(System.Double)">
<summary>
 Sets the thickness (in px) of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.spikesides(System.Boolean)">
<summary>
 Sets whether or not spikes extending from the projection data points to this axis&apos; wall boundaries are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.spikecolor(System.String)">
<summary>
 Sets the color of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.side(System.Object)">
<summary>
 Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showticksuffix(System.Object)">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showtickprefix(System.Object)">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showticklabels(System.Boolean)">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showspikes(System.Boolean)">
<summary>
 Sets whether or not spikes starting from data points to this axis&apos; wall are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showline(System.Boolean)">
<summary>
 Determines whether or not a line bounding this axis is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showgrid(System.Boolean)">
<summary>
 Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showexponent(System.Object)">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showbackground(System.Boolean)">
<summary>
 Sets whether or not this axis&apos; wall has a background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showaxeslabels(System.Boolean)">
<summary>
 Sets whether or not this axis is labeled
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.rangemode(System.Object)">
<summary>
 If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.range(System.Object)">
<summary>
 Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.position(System.Double)">
<summary>
 Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.overlaying(System.Object)">
<summary>
 If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.nticks(System.Int32)">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.mirror(System.Object)">
<summary>
 Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.linewidth(System.Double)">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.linecolor(System.String)">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.hoverformat(System.String)">
<summary>
 Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.gridwidth(System.Double)">
<summary>
 Sets the width (in px) of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.gridcolor(System.String)">
<summary>
 Sets the color of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.fixedrange(System.Boolean)">
<summary>
 Determines whether or not this axis is zoom-able. If true, then zoom is disabled.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.exponentformat(System.Object)">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.dtick(System.Object)">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.domain(System.Object)">
<summary>
 Sets the domain of this axis (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.backgroundcolor(System.String)">
<summary>
 Sets the background color of this axis&apos; wall.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.autorange(System.Object)">
<summary>
 Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.anchor(System.Object)">
<summary>
 If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis&apos; position is determined by `position`.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.zerolinewidth">
<summary>
 Sets the width (in px) of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.zerolinecolor">
<summary>
 Sets the line color of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.zeroline">
<summary>
 Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.type">
<summary>
 Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.title">
<summary>
 Sets the title of this axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickwidth">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickvalssrc">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickvals">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticktextsrc">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticktext">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticksuffix">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticks">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickprefix">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickmode">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.ticklen">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickformat">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickcolor">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tickangle">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.tick0">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.spikethickness">
<summary>
 Sets the thickness (in px) of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.spikesides">
<summary>
 Sets whether or not spikes extending from the projection data points to this axis&apos; wall boundaries are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.spikecolor">
<summary>
 Sets the color of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.side">
<summary>
 Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showticksuffix">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showtickprefix">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showticklabels">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showspikes">
<summary>
 Sets whether or not spikes starting from data points to this axis&apos; wall are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showline">
<summary>
 Determines whether or not a line bounding this axis is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showgrid">
<summary>
 Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showexponent">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showbackground">
<summary>
 Sets whether or not this axis&apos; wall has a background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.showaxeslabels">
<summary>
 Sets whether or not this axis is labeled
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.rangemode">
<summary>
 If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.range">
<summary>
 Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.position">
<summary>
 Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.overlaying">
<summary>
 If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.nticks">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.mirror">
<summary>
 Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.linewidth">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.linecolor">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.hoverformat">
<summary>
 Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.gridwidth">
<summary>
 Sets the width (in px) of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.gridcolor">
<summary>
 Sets the color of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.fixedrange">
<summary>
 Determines whether or not this axis is zoom-able. If true, then zoom is disabled.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.exponentformat">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.dtick">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.domain">
<summary>
 Sets the domain of this axis (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.backgroundcolor">
<summary>
 Sets the background color of this axis&apos; wall.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.autorange">
<summary>
 Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.
</summary>
</member>
<member name="P:XPlot.Plotly.Xaxis.anchor">
<summary>
 If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis&apos; position is determined by `position`.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.zerolinewidth(System.Double)">
<summary>
 Sets the width (in px) of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.zerolinecolor(System.String)">
<summary>
 Sets the line color of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.zeroline(System.Boolean)">
<summary>
 Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.type(System.Object)">
<summary>
 Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.title(System.String)">
<summary>
 Sets the title of this axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickwidth(System.Double)">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickvalssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickvals(System.Object)">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticktextsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticktext(System.Object)">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticksuffix(System.String)">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticks(System.Object)">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickprefix(System.String)">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickmode(System.Object)">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticklen(System.Double)">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickformat(System.String)">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickcolor(System.String)">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickangle(System.Double)">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tick0(System.Double)">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.spikethickness(System.Double)">
<summary>
 Sets the thickness (in px) of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.spikesides(System.Boolean)">
<summary>
 Sets whether or not spikes extending from the projection data points to this axis&apos; wall boundaries are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.spikecolor(System.String)">
<summary>
 Sets the color of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.side(System.Object)">
<summary>
 Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showticksuffix(System.Object)">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showtickprefix(System.Object)">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showticklabels(System.Boolean)">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showspikes(System.Boolean)">
<summary>
 Sets whether or not spikes starting from data points to this axis&apos; wall are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showline(System.Boolean)">
<summary>
 Determines whether or not a line bounding this axis is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showgrid(System.Boolean)">
<summary>
 Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showexponent(System.Object)">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showbackground(System.Boolean)">
<summary>
 Sets whether or not this axis&apos; wall has a background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showaxeslabels(System.Boolean)">
<summary>
 Sets whether or not this axis is labeled
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.rangemode(System.Object)">
<summary>
 If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.range(System.Object)">
<summary>
 Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.position(System.Double)">
<summary>
 Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.overlaying(System.Object)">
<summary>
 If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.nticks(System.Int32)">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.mirror(System.Object)">
<summary>
 Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.linewidth(System.Double)">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.linecolor(System.String)">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.hoverformat(System.String)">
<summary>
 Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.gridwidth(System.Double)">
<summary>
 Sets the width (in px) of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.gridcolor(System.String)">
<summary>
 Sets the color of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.fixedrange(System.Boolean)">
<summary>
 Determines whether or not this axis is zoom-able. If true, then zoom is disabled.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.exponentformat(System.Object)">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.dtick(System.Object)">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.domain(System.Object)">
<summary>
 Sets the domain of this axis (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.backgroundcolor(System.String)">
<summary>
 Sets the background color of this axis&apos; wall.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.autorange(System.Object)">
<summary>
 Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.anchor(System.Object)">
<summary>
 If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis&apos; position is determined by `position`.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.zerolinewidth">
<summary>
 Sets the width (in px) of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.zerolinecolor">
<summary>
 Sets the line color of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.zeroline">
<summary>
 Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.type">
<summary>
 Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.title">
<summary>
 Sets the title of this axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickwidth">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickvalssrc">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickvals">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticktextsrc">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticktext">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticksuffix">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticks">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickprefix">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickmode">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.ticklen">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickformat">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickcolor">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tickangle">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.tick0">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.spikethickness">
<summary>
 Sets the thickness (in px) of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.spikesides">
<summary>
 Sets whether or not spikes extending from the projection data points to this axis&apos; wall boundaries are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.spikecolor">
<summary>
 Sets the color of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.side">
<summary>
 Determines whether a x (y) axis is positioned at the *bottom* (*left*) or *top* (*right*) of the plotting area.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showticksuffix">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showtickprefix">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showticklabels">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showspikes">
<summary>
 Sets whether or not spikes starting from data points to this axis&apos; wall are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showline">
<summary>
 Determines whether or not a line bounding this axis is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showgrid">
<summary>
 Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showexponent">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showbackground">
<summary>
 Sets whether or not this axis&apos; wall has a background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.showaxeslabels">
<summary>
 Sets whether or not this axis is labeled
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.rangemode">
<summary>
 If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.range">
<summary>
 Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.position">
<summary>
 Sets the position of this axis in the plotting space (in normalized coordinates). Only has an effect if `anchor` is set to *free*.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.overlaying">
<summary>
 If set a same-letter axis id, this axis is overlaid on top of the corresponding same-letter axis. If *false*, this axis does not overlay any same-letter axes.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.nticks">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.mirror">
<summary>
 Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.linewidth">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.linecolor">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.hoverformat">
<summary>
 Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.gridwidth">
<summary>
 Sets the width (in px) of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.gridcolor">
<summary>
 Sets the color of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.fixedrange">
<summary>
 Determines whether or not this axis is zoom-able. If true, then zoom is disabled.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.exponentformat">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.dtick">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.domain">
<summary>
 Sets the domain of this axis (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.backgroundcolor">
<summary>
 Sets the background color of this axis&apos; wall.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.autorange">
<summary>
 Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.
</summary>
</member>
<member name="P:XPlot.Plotly.Yaxis.anchor">
<summary>
 If set to an opposite-letter axis id (e.g. `xaxis2`, `yaxis`), this axis is bound to the corresponding opposite-letter axis. If set to *free*, this axis&apos; position is determined by `position`.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.zerolinewidth(System.Double)">
<summary>
 Sets the width (in px) of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.zerolinecolor(System.String)">
<summary>
 Sets the line color of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.zeroline(System.Boolean)">
<summary>
 Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.type(System.Object)">
<summary>
 Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.title(System.String)">
<summary>
 Sets the title of this axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickwidth(System.Double)">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickvalssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickvals(System.Object)">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticktextsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticktext(System.Object)">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticksuffix(System.String)">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticks(System.Object)">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickprefix(System.String)">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickmode(System.Object)">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticklen(System.Double)">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickformat(System.String)">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickcolor(System.String)">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickangle(System.Double)">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tick0(System.Double)">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.spikethickness(System.Double)">
<summary>
 Sets the thickness (in px) of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.spikesides(System.Boolean)">
<summary>
 Sets whether or not spikes extending from the projection data points to this axis&apos; wall boundaries are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.spikecolor(System.String)">
<summary>
 Sets the color of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showticksuffix(System.Object)">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showtickprefix(System.Object)">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showticklabels(System.Boolean)">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showspikes(System.Boolean)">
<summary>
 Sets whether or not spikes starting from data points to this axis&apos; wall are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showline(System.Boolean)">
<summary>
 Determines whether or not a line bounding this axis is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showgrid(System.Boolean)">
<summary>
 Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showexponent(System.Object)">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showbackground(System.Boolean)">
<summary>
 Sets whether or not this axis&apos; wall has a background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showaxeslabels(System.Boolean)">
<summary>
 Sets whether or not this axis is labeled
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.rangemode(System.Object)">
<summary>
 If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.range(System.Object)">
<summary>
 Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.nticks(System.Int32)">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.mirror(System.Object)">
<summary>
 Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.linewidth(System.Double)">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.linecolor(System.String)">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.hoverformat(System.String)">
<summary>
 Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.gridwidth(System.Double)">
<summary>
 Sets the width (in px) of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.gridcolor(System.String)">
<summary>
 Sets the color of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.fixedrange(System.Boolean)">
<summary>
 Determines whether or not this axis is zoom-able. If true, then zoom is disabled.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.exponentformat(System.Object)">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.dtick(System.Object)">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.backgroundcolor(System.String)">
<summary>
 Sets the background color of this axis&apos; wall.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.autorange(System.Object)">
<summary>
 Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.zerolinewidth">
<summary>
 Sets the width (in px) of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.zerolinecolor">
<summary>
 Sets the line color of the zero line.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.zeroline">
<summary>
 Determines whether or not a line is drawn at along the 0 value of this axis. If *true*, the zero line is drawn on top of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.type">
<summary>
 Sets the axis type. By default, plotly attempts to determined the axis type by looking into the data of the traces that referenced the axis in question.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.title">
<summary>
 Sets the title of this axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickwidth">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickvalssrc">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickvals">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticktextsrc">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticktext">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticksuffix">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticks">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickprefix">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickmode">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.ticklen">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickformat">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickcolor">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tickangle">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.tick0">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.spikethickness">
<summary>
 Sets the thickness (in px) of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.spikesides">
<summary>
 Sets whether or not spikes extending from the projection data points to this axis&apos; wall boundaries are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.spikecolor">
<summary>
 Sets the color of the spikes.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showticksuffix">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showtickprefix">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showticklabels">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showspikes">
<summary>
 Sets whether or not spikes starting from data points to this axis&apos; wall are shown on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showline">
<summary>
 Determines whether or not a line bounding this axis is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showgrid">
<summary>
 Determines whether or not grid lines are drawn. If *true*, the grid lines are drawn at every tick mark.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showexponent">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showbackground">
<summary>
 Sets whether or not this axis&apos; wall has a background color.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.showaxeslabels">
<summary>
 Sets whether or not this axis is labeled
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.rangemode">
<summary>
 If *normal*, the range is computed in relation to the extrema of the input data. If *tozero*`, the range extends to 0, regardless of the input data If *nonnegative*, the range is non-negative, regardless of the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.range">
<summary>
 Sets the range of this axis. If the axis `type` is *log*, then you must take the log of your desired range (e.g. to set the range from 1 to 100, set the range from 0 to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the date range from January 1st 1970 to November 4th, 2013, set the range from 0 to 1380844800000.0
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.nticks">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.mirror">
<summary>
 Determines if the axis lines or/and ticks are mirrored to the opposite side of the plotting area. If *true*, the axis lines are mirrored. If *ticks*, the axis lines and ticks are mirrored. If *false*, mirroring is disable. If *all*, axis lines are mirrored on all shared-axes subplots. If *allticks*, axis lines and ticks are mirrored on all shared-axes subplots.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.linewidth">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.linecolor">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.hoverformat">
<summary>
 Sets the hover text formatting rule for data values on this axis, using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.gridwidth">
<summary>
 Sets the width (in px) of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.gridcolor">
<summary>
 Sets the color of the grid lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.fixedrange">
<summary>
 Determines whether or not this axis is zoom-able. If true, then zoom is disabled.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.exponentformat">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.dtick">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.backgroundcolor">
<summary>
 Sets the background color of this axis&apos; wall.
</summary>
</member>
<member name="P:XPlot.Plotly.Zaxis.autorange">
<summary>
 Determines whether or not the range of this axis is computed in relation to the input data. See `rangemode` for more info. If `range` is provided, then `autorange` is set to *false*.
</summary>
</member>
<member name="P:XPlot.Plotly.Projection.type(System.Object)">
<summary>
 Sets the projection type.
</summary>
</member>
<member name="P:XPlot.Plotly.Projection.scale(System.Double)">
<summary>
 Zooms in or out on the map view.
</summary>
</member>
<member name="P:XPlot.Plotly.Projection.parallels(System.Object)">
<summary>
 For conic projection types only. Sets the parallels (tangent, secant) where the cone intersects the sphere.
</summary>
</member>
<member name="P:XPlot.Plotly.Projection.type">
<summary>
 Sets the projection type.
</summary>
</member>
<member name="P:XPlot.Plotly.Projection.scale">
<summary>
 Zooms in or out on the map view.
</summary>
</member>
<member name="P:XPlot.Plotly.Projection.parallels">
<summary>
 For conic projection types only. Sets the parallels (tangent, secant) where the cone intersects the sphere.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.start(System.Double)">
<summary>
 Sets the starting contour level value.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.size(System.Double)">
<summary>
 Sets the step between each contour level.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.showlines(System.Boolean)">
<summary>
 Determines whether or not the contour lines are drawn. Has only an effect if `contours.coloring` is set to *fill*.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.end(System.Double)">
<summary>
 Sets the end contour level value.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.coloring(System.Object)">
<summary>
 Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient is coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.start">
<summary>
 Sets the starting contour level value.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.size">
<summary>
 Sets the step between each contour level.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.showlines">
<summary>
 Determines whether or not the contour lines are drawn. Has only an effect if `contours.coloring` is set to *fill*.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.end">
<summary>
 Sets the end contour level value.
</summary>
</member>
<member name="P:XPlot.Plotly.Contours.coloring">
<summary>
 Determines the coloring method showing the contour values. If *fill*, coloring is done evenly between each contour level If *heatmap*, a heatmap gradient is coloring is applied between each contour level. If *lines*, coloring is done on the contour lines. If *none*, no coloring is applied on this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Insidetextfont.family(System.String)">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Insidetextfont.family">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Outsidetextfont.family(System.String)">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Outsidetextfont.family">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Domain.y(System.Object)">
<summary>
 Sets the vertical domain of this pie trace (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Domain.x(System.Object)">
<summary>
 Sets the horizontal domain of this pie trace (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Domain.y">
<summary>
 Sets the vertical domain of this pie trace (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Domain.x">
<summary>
 Sets the horizontal domain of this pie trace (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.subunitwidth(System.Double)">
<summary>
 Sets the stroke width (in px) of the subunits boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.subunitcolor(System.String)">
<summary>
 Sets the color of the subunits boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showsubunits(System.Boolean)">
<summary>
 Sets whether or not boundaries of subunits within countries (e.g. states, provinces) are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showrivers(System.Boolean)">
<summary>
 Sets whether or not rivers are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showocean(System.Boolean)">
<summary>
 Sets whether or not oceans are filled in color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showland(System.Boolean)">
<summary>
 Sets whether or not land masses are filled in color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showlakes(System.Boolean)">
<summary>
 Sets whether or not lakes are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showframe(System.Boolean)">
<summary>
 Sets whether or not a frame is drawn around the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showcountries(System.Boolean)">
<summary>
 Sets whether or not country boundaries are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showcoastlines(System.Boolean)">
<summary>
 Sets whether or not the coastlines are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.scope(System.Object)">
<summary>
 Set the scope of the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.riverwidth(System.Double)">
<summary>
 Sets the stroke width (in px) of the rivers.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.rivercolor(System.String)">
<summary>
 Sets color of the rivers.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.resolution(System.Object)">
<summary>
 Sets the resolution of the base layers. The values have units of km/mm e.g. 110 corresponds to a scale ratio of 1:110,000,000.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.oceancolor(System.String)">
<summary>
 Sets the ocean color
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.landcolor(System.String)">
<summary>
 Sets the land mass color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.lakecolor(System.String)">
<summary>
 Sets the color of the lakes.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.framewidth(System.Double)">
<summary>
 Sets the stroke width (in px) of the frame.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.framecolor(System.String)">
<summary>
 Sets the color the frame.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.countrywidth(System.Double)">
<summary>
 Sets line width (in px) of the country boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.countrycolor(System.String)">
<summary>
 Sets line color of the country boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.coastlinewidth(System.Double)">
<summary>
 Sets the coastline stroke width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.coastlinecolor(System.String)">
<summary>
 Sets the coastline color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.bgcolor(System.String)">
<summary>
 Set the background color of the map
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.subunitwidth">
<summary>
 Sets the stroke width (in px) of the subunits boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.subunitcolor">
<summary>
 Sets the color of the subunits boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showsubunits">
<summary>
 Sets whether or not boundaries of subunits within countries (e.g. states, provinces) are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showrivers">
<summary>
 Sets whether or not rivers are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showocean">
<summary>
 Sets whether or not oceans are filled in color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showland">
<summary>
 Sets whether or not land masses are filled in color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showlakes">
<summary>
 Sets whether or not lakes are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showframe">
<summary>
 Sets whether or not a frame is drawn around the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showcountries">
<summary>
 Sets whether or not country boundaries are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.showcoastlines">
<summary>
 Sets whether or not the coastlines are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.scope">
<summary>
 Set the scope of the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.riverwidth">
<summary>
 Sets the stroke width (in px) of the rivers.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.rivercolor">
<summary>
 Sets color of the rivers.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.resolution">
<summary>
 Sets the resolution of the base layers. The values have units of km/mm e.g. 110 corresponds to a scale ratio of 1:110,000,000.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.oceancolor">
<summary>
 Sets the ocean color
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.landcolor">
<summary>
 Sets the land mass color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.lakecolor">
<summary>
 Sets the color of the lakes.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.framewidth">
<summary>
 Sets the stroke width (in px) of the frame.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.framecolor">
<summary>
 Sets the color the frame.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.countrywidth">
<summary>
 Sets line width (in px) of the country boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.countrycolor">
<summary>
 Sets line color of the country boundaries.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.coastlinewidth">
<summary>
 Sets the coastline stroke width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.coastlinecolor">
<summary>
 Sets the coastline color.
</summary>
</member>
<member name="P:XPlot.Plotly.Geo.bgcolor">
<summary>
 Set the background color of the map
</summary>
</member>
<member name="P:XPlot.Plotly.Scene.aspectmode(System.Object)">
<summary>
 If *cube*, this scene&apos;s axes are drawn as a cube, regardless of the axes&apos; ranges. If *data*, this scene&apos;s axes are drawn in proportion with the axes&apos; ranges. If *manual*, this scene&apos;s axes are drawn in proportion with the input of *aspectratio* (the default behavior if *aspectratio* is provided). If *auto*, this scene&apos;s axes are drawn using the results of *data* except when one axis is more than four times the size of the two others, where in that case the results of *cube* are used.
</summary>
</member>
<member name="P:XPlot.Plotly.Scene.aspectmode">
<summary>
 If *cube*, this scene&apos;s axes are drawn as a cube, regardless of the axes&apos; ranges. If *data*, this scene&apos;s axes are drawn in proportion with the axes&apos; ranges. If *manual*, this scene&apos;s axes are drawn in proportion with the input of *aspectratio* (the default behavior if *aspectratio* is provided). If *auto*, this scene&apos;s axes are drawn using the results of *data* except when one axis is more than four times the size of the two others, where in that case the results of *cube* are used.
</summary>
</member>
<member name="P:XPlot.Plotly.Xbins.start(System.Double)">
<summary>
 Sets the starting value for the x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Xbins.size(System.Object)">
<summary>
 Sets the step in-between value each x axis bin.
</summary>
</member>
<member name="P:XPlot.Plotly.Xbins.end(System.Double)">
<summary>
 Sets the end value for the x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Xbins.start">
<summary>
 Sets the starting value for the x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Xbins.size">
<summary>
 Sets the step in-between value each x axis bin.
</summary>
</member>
<member name="P:XPlot.Plotly.Xbins.end">
<summary>
 Sets the end value for the x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Ybins.start(System.Double)">
<summary>
 Sets the starting value for the y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Ybins.size(System.Object)">
<summary>
 Sets the step in-between value each y axis bin.
</summary>
</member>
<member name="P:XPlot.Plotly.Ybins.end(System.Double)">
<summary>
 Sets the end value for the y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Ybins.start">
<summary>
 Sets the starting value for the y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Ybins.size">
<summary>
 Sets the step in-between value each y axis bin.
</summary>
</member>
<member name="P:XPlot.Plotly.Ybins.end">
<summary>
 Sets the end value for the y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Textfont.sizesrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  size .
</summary>
</member>
<member name="P:XPlot.Plotly.Textfont.familysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  family .
</summary>
</member>
<member name="P:XPlot.Plotly.Textfont.colorsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  color .
</summary>
</member>
<member name="P:XPlot.Plotly.Textfont.sizesrc">
<summary>
 Sets the source reference on plot.ly for  size .
</summary>
</member>
<member name="P:XPlot.Plotly.Textfont.familysrc">
<summary>
 Sets the source reference on plot.ly for  family .
</summary>
</member>
<member name="P:XPlot.Plotly.Textfont.colorsrc">
<summary>
 Sets the source reference on plot.ly for  color .
</summary>
</member>
<member name="P:XPlot.Plotly.Titlefont.family(System.String)">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Titlefont.family">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Tickfont.family(System.String)">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Tickfont.family">
<summary>
 HTML font family - the typeface that will be applied by the web browser. The web browser will only be able to apply a font if it is available on the system which it operates. Provide multiple font families, separated by commas, to indicate the preference in which to apply fonts if they aren&apos;t available on the system. The plotly service (at https://plot.ly or on-premise) generates images on a server, where only a select number of fonts are installed and supported. These include *Arial*, *Balto*, *Courier New*, *Droid Sans*,, *Droid Serif*, *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*, *PT Sans Narrow*, *Raleway*, *Times New Roman*.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ypad(System.Double)">
<summary>
 Sets the amount of padding (in px) along the y direction.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.yanchor(System.Object)">
<summary>
 Sets this color bar&apos;s vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.y(System.Double)">
<summary>
 Sets the y position of the color bar (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.xpad(System.Double)">
<summary>
 Sets the amount of padding (in px) along the x direction.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.xanchor(System.Object)">
<summary>
 Sets this color bar&apos;s horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.x(System.Double)">
<summary>
 Sets the x position of the color bar (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.titleside(System.Object)">
<summary>
 Determines the location of the colorbar title with respect to the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.title(System.String)">
<summary>
 Sets the title of the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickwidth(System.Double)">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickvalssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickvals(System.Object)">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticktextsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticktext(System.Object)">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticksuffix(System.String)">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticks(System.Object)">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickprefix(System.String)">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickmode(System.Object)">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticklen(System.Double)">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickformat(System.String)">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickcolor(System.String)">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickangle(System.Double)">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tick0(System.Double)">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.thicknessmode(System.Object)">
<summary>
 Determines whether this color bar&apos;s thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.thickness(System.Double)">
<summary>
 Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showticksuffix(System.Object)">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showtickprefix(System.Object)">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showticklabels(System.Boolean)">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showexponent(System.Object)">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.outlinewidth(System.Double)">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.outlinecolor(System.String)">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.nticks(System.Int32)">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.lenmode(System.Object)">
<summary>
 Determines whether this color bar&apos;s length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.len(System.Double)">
<summary>
 Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.exponentformat(System.Object)">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.dtick(System.Object)">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.borderwidth(System.Double)">
<summary>
 Sets the width (in px) or the border enclosing this color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.bordercolor(System.String)">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.bgcolor(System.String)">
<summary>
 Sets the color of padded area.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ypad">
<summary>
 Sets the amount of padding (in px) along the y direction.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.yanchor">
<summary>
 Sets this color bar&apos;s vertical position anchor This anchor binds the `y` position to the *top*, *middle* or *bottom* of the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.y">
<summary>
 Sets the y position of the color bar (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.xpad">
<summary>
 Sets the amount of padding (in px) along the x direction.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.xanchor">
<summary>
 Sets this color bar&apos;s horizontal position anchor. This anchor binds the `x` position to the *left*, *center* or *right* of the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.x">
<summary>
 Sets the x position of the color bar (in plot fraction).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.titleside">
<summary>
 Determines the location of the colorbar title with respect to the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.title">
<summary>
 Sets the title of the color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickwidth">
<summary>
 Sets the tick width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickvalssrc">
<summary>
 Sets the source reference on plot.ly for  tickvals .
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickvals">
<summary>
 Sets the values at which ticks on this axis appear. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticktextsrc">
<summary>
 Sets the source reference on plot.ly for  ticktext .
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticktext">
<summary>
 Sets the text displayed at the ticks position via `tickvals`. Only has an effect if `tickmode` is set to *array*. Used with `ticktext`.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticksuffix">
<summary>
 Sets a tick label suffix.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticks">
<summary>
 Determines whether ticks are drawn or not. If **, this axis&apos; ticks are not drawn. If *outside* (*inside*), this axis&apos; are drawn outside (inside) the axis lines.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickprefix">
<summary>
 Sets a tick label prefix.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickmode">
<summary>
 Sets the tick mode for this axis. If *auto*, the number of ticks is set via `nticks`. If *linear*, the placement of the ticks is determined by a starting position `tick0` and a tick step `dtick` (*linear* is the default value if `tick0` and `dtick` are provided). If *array*, the placement of the ticks is set via `tickvals` and the tick text is `ticktext`. (*array* is the default value if `tickvals` is provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.ticklen">
<summary>
 Sets the tick length (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickformat">
<summary>
 Sets the tick label formatting rule using the python/d3 number formatting language. See https://github.com/mbostock/d3/wiki/Formatting#numbers or https://docs.python.org/release/3.1.3/library/string.html#formatspec for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickcolor">
<summary>
 Sets the tick color.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tickangle">
<summary>
 Sets the angle of the tick labels with respect to the horizontal. For example, a `tickangle` of -90 draws the tick labels vertically.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.tick0">
<summary>
 Sets the placement of the first tick on this axis. Use with `dtick`. If the axis `type` is *log*, then you must take the log of your starting tick (e.g. to set the starting tick to 100, set the `tick0` to 2). If the axis `type` is *date*, then you must convert the date to unix time in milliseconds (the number of milliseconds since January 1st, 1970). For example, to set the starting tick to November 4th, 2013, set the range to 1380844800000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.thicknessmode">
<summary>
 Determines whether this color bar&apos;s thickness (i.e. the measure in the constant color direction) is set in units of plot *fraction* or in *pixels*. Use `thickness` to set the value.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.thickness">
<summary>
 Sets the thickness of the color bar This measure excludes the size of the padding, ticks and labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showticksuffix">
<summary>
 Same as `showtickprefix` but for tick suffixes.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showtickprefix">
<summary>
 If *all*, all tick labels are displayed with a prefix. If *first*, only the first tick is displayed with a prefix. If *last*, only the last tick is displayed with a suffix. If *none*, tick prefixes are hidden.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showticklabels">
<summary>
 Determines whether or not the tick labels are drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.showexponent">
<summary>
 If *all*, all exponents are shown besides their significands. If *first*, only the exponent of the first tick is shown. If *last*, only the exponent of the last tick is shown. If *none*, no exponents appear.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.outlinewidth">
<summary>
 Sets the width (in px) of the axis line.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.outlinecolor">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.nticks">
<summary>
 Sets the number of ticks. Has an effect only if `tickmode` is set to *auto*.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.lenmode">
<summary>
 Determines whether this color bar&apos;s length (i.e. the measure in the color variation direction) is set in units of plot *fraction* or in *pixels. Use `len` to set the value.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.len">
<summary>
 Sets the length of the color bar This measure excludes the padding of both ends. That is, the color bar length is this length minus the padding on both ends.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.exponentformat">
<summary>
 Determines a formatting rule for the tick exponents. For example, consider the number 1,000,000,000. If *none*, it appears as 1,000,000,000. If *e*, 1e+9. If *E*, 1E+9. If *power*, 1x10^9 (with 9 in a super script). If *SI*, 1G. If *B*, 1B.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.dtick">
<summary>
 Sets the step in-between ticks on this axis Use with `tick0`. If the axis `type` is *log*, then ticks are set every 10^(n*dtick) where n is the tick number. For example, to set a tick mark at 1, 10, 100, 1000, ... set dtick to 1. To set tick marks at 1, 100, 10000, ... set dtick to 2. To set tick marks at 1, 5, 25, 125, 625, 3125, ... set dtick to log_10(5), or 0.69897000433. If the axis `type` is *date*, then you must convert the time to milliseconds. For example, to set the interval between ticks to one day, set `dtick` to 86400000.0.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.borderwidth">
<summary>
 Sets the width (in px) or the border enclosing this color bar.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.bordercolor">
<summary>
 Sets the axis line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Colorbar.bgcolor">
<summary>
 Sets the color of padded area.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.widthsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  width .
</summary>
</member>
<member name="P:XPlot.Plotly.Line.width(System.Object)">
<summary>
 Sets the line width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Line.smoothing(System.Double)">
<summary>
 Has only an effect if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape).
</summary>
</member>
<member name="P:XPlot.Plotly.Line.shape(System.Object)">
<summary>
 Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.reversescale(System.Boolean)">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.outlierwidth(System.Double)">
<summary>
 Sets the border line width (in px) of the outlier sample points.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.outliercolor(System.String)">
<summary>
 Sets the border line color of the outlier sample points. Defaults to marker.color
</summary>
</member>
<member name="P:XPlot.Plotly.Line.dash(System.String)">
<summary>
 Sets the style of the lines. Set to a dash string type or a dash length in px.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.colorsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  color .
</summary>
</member>
<member name="P:XPlot.Plotly.Line.colorscale(System.Object)">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.color(System.Object)">
<summary>
 Sets the line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.cmin(System.Double)">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.cmax(System.Double)">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.cauto(System.Boolean)">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.autocolorscale(System.Boolean)">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.widthsrc">
<summary>
 Sets the source reference on plot.ly for  width .
</summary>
</member>
<member name="P:XPlot.Plotly.Line.width">
<summary>
 Sets the line width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Line.smoothing">
<summary>
 Has only an effect if `shape` is set to *spline* Sets the amount of smoothing. *0* corresponds to no smoothing (equivalent to a *linear* shape).
</summary>
</member>
<member name="P:XPlot.Plotly.Line.shape">
<summary>
 Determines the line shape. With *spline* the lines are drawn using spline interpolation. The other available values correspond to step-wise line shapes.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.reversescale">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.outlierwidth">
<summary>
 Sets the border line width (in px) of the outlier sample points.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.outliercolor">
<summary>
 Sets the border line color of the outlier sample points. Defaults to marker.color
</summary>
</member>
<member name="P:XPlot.Plotly.Line.dash">
<summary>
 Sets the style of the lines. Set to a dash string type or a dash length in px.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.colorsrc">
<summary>
 Sets the source reference on plot.ly for  color .
</summary>
</member>
<member name="P:XPlot.Plotly.Line.colorscale">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.color">
<summary>
 Sets the line color.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.cmin">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Sets the lower bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.cmax">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Sets the upper bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.cauto">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Line.autocolorscale">
<summary>
 Has only an effect if `marker.line.color` is set to a numerical array. Determines whether or not the colorscale is picked using the sign of values inside `marker.line.color`.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.yref(System.Object)">
<summary>
 Sets the annotation&apos;s y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where *0* (*1*) corresponds to the bottom (top).
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.y1(System.Object)">
<summary>
 Sets the shape&apos;s end y position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.y0(System.Object)">
<summary>
 Sets the shape&apos;s starting y position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.xref(System.Object)">
<summary>
 Sets the shape&apos;s x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where *0* (*1*) corresponds to the left (right) side.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.x1(System.Object)">
<summary>
 Sets the shape&apos;s end x position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.x0(System.Object)">
<summary>
 Sets the shape&apos;s starting x position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.type(System.Object)">
<summary>
 Specifies the shape type to be drawn. If *line*, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`) If *circle*, a circle is drawn from ((`x0`+`x1`)/2, (`y0`+`y1`)/2)) with radius (|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|) If *rect*, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`) If *path*, draw a custom SVG path using `path`.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.path(System.String)">
<summary>
 For `type` *path* - a valid SVG path but with the pixel values replaced by data values. There are a few restrictions / quirks only absolute instructions, not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and ry are relative. In the future we could consider supporting relative commands, but we would have to decide on how to handle date and log axes. Note that even as is, Q and C Bezier paths that are smooth on linear axes may not be smooth on log, and vice versa. no chained &quot;polybezier&quot; commands - specify the segment type for each one. On category axes, values are numbers scaled to the serial numbers of categories because using the categories themselves there would be no way to describe fractional positions On data axes: because space and T are both normal components of path strings, we can&apos;t use either to separate date from time parts. Therefore we&apos;ll use underscore for this purpose: 2015-02-21_13:45:56.789
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.opacity(System.Double)">
<summary>
 Sets the opacity of the shape.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.fillcolor(System.String)">
<summary>
 Sets the color filling the shape&apos;s interior.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.yref">
<summary>
 Sets the annotation&apos;s y coordinate axis. If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate If set to *paper*, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where *0* (*1*) corresponds to the bottom (top).
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.y1">
<summary>
 Sets the shape&apos;s end y position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.y0">
<summary>
 Sets the shape&apos;s starting y position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.xref">
<summary>
 Sets the shape&apos;s x coordinate axis. If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate If set to *paper*, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where *0* (*1*) corresponds to the left (right) side.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.x1">
<summary>
 Sets the shape&apos;s end x position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.x0">
<summary>
 Sets the shape&apos;s starting x position. See `type` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.type">
<summary>
 Specifies the shape type to be drawn. If *line*, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`) If *circle*, a circle is drawn from ((`x0`+`x1`)/2, (`y0`+`y1`)/2)) with radius (|(`x0`+`x1`)/2 - `x0`|, |(`y0`+`y1`)/2 -`y0`)|) If *rect*, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`) If *path*, draw a custom SVG path using `path`.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.path">
<summary>
 For `type` *path* - a valid SVG path but with the pixel values replaced by data values. There are a few restrictions / quirks only absolute instructions, not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and ry are relative. In the future we could consider supporting relative commands, but we would have to decide on how to handle date and log axes. Note that even as is, Q and C Bezier paths that are smooth on linear axes may not be smooth on log, and vice versa. no chained &quot;polybezier&quot; commands - specify the segment type for each one. On category axes, values are numbers scaled to the serial numbers of categories because using the categories themselves there would be no way to describe fractional positions On data axes: because space and T are both normal components of path strings, we can&apos;t use either to separate date from time parts. Therefore we&apos;ll use underscore for this purpose: 2015-02-21_13:45:56.789
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.opacity">
<summary>
 Sets the opacity of the shape.
</summary>
</member>
<member name="P:XPlot.Plotly.Shape.fillcolor">
<summary>
 Sets the color filling the shape&apos;s interior.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.symbolsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  symbol .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.symbol(System.Object)">
<summary>
 Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizesrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  size .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizeref(System.Double)">
<summary>
 Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizemode(System.Object)">
<summary>
 Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizemin(System.Double)">
<summary>
 Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.size(System.Object)">
<summary>
 Sets the marker size (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.showscale(System.Boolean)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.reversescale(System.Boolean)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.outliercolor(System.String)">
<summary>
 Sets the color of the outlier sample points.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.opacitysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  opacity .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.opacity(System.Object)">
<summary>
 Sets the marker opacity.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.maxdisplayed(System.Int32)">
<summary>
 Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colorssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  colors .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colorsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  color .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colorscale(System.Object)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colors(System.Object)">
<summary>
 Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.color(System.Object)">
<summary>
 Sets the marker color.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.cmin(System.Double)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.cmax(System.Double)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.cauto(System.Boolean)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.autocolorscale(System.Boolean)">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.symbolsrc">
<summary>
 Sets the source reference on plot.ly for  symbol .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.symbol">
<summary>
 Sets the marker symbol type. Adding 100 is equivalent to appending *-open* to a symbol name. Adding 200 is equivalent to appending *-dot* to a symbol name. Adding 300 is equivalent to appending *-open-dot* or *dot-open* to a symbol name.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizesrc">
<summary>
 Sets the source reference on plot.ly for  size .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizeref">
<summary>
 Has only an effect if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizemode">
<summary>
 Has only an effect if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.sizemin">
<summary>
 Has only an effect if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.size">
<summary>
 Sets the marker size (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.showscale">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.reversescale">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.outliercolor">
<summary>
 Sets the color of the outlier sample points.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.opacitysrc">
<summary>
 Sets the source reference on plot.ly for  opacity .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.opacity">
<summary>
 Sets the marker opacity.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.maxdisplayed">
<summary>
 Sets a maximum number of points to be drawn on the graph. *0* corresponds to no limit.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colorssrc">
<summary>
 Sets the source reference on plot.ly for  colors .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colorsrc">
<summary>
 Sets the source reference on plot.ly for  color .
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colorscale">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.colors">
<summary>
 Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.color">
<summary>
 Sets the marker color.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.cmin">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Sets the lower bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.cmax">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Sets the upper bound of the color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.cauto">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Determines the whether or not the color domain is computed automatically.
</summary>
</member>
<member name="P:XPlot.Plotly.Marker.autocolorscale">
<summary>
 Has only an effect if `marker.color` is set to a numerical array. Determines whether or not the colorscale is picked using values inside `marker.color`.
</summary>
</member>
<member name="P:XPlot.Plotly.Stream.token(System.String)">
<summary>
 The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.
</summary>
</member>
<member name="P:XPlot.Plotly.Stream.maxpoints(System.Double)">
<summary>
 Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.
</summary>
</member>
<member name="P:XPlot.Plotly.Stream.token">
<summary>
 The stream id number links a data trace on a plot with a stream. See https://plot.ly/settings for more details.
</summary>
</member>
<member name="P:XPlot.Plotly.Stream.maxpoints">
<summary>
 Sets the maximum number of points to keep on the plots from an incoming stream. If `maxpoints` is set to *50*, only the newest 50 points will be displayed on the plot.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Area.tsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Area.t(System.Object)">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.rsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Area.r(System.Object)">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Area.tsrc">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Area.t">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.rsrc">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Area.r">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Area.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.text(System.String)">
<summary>
 Sets text elements associated with each (x,y) pair to appear on hover. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.mode(System.String)">
<summary>
 Determines the drawing mode for this scatter trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.fillcolor(System.String)">
<summary>
 Sets the fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.fill(System.Object)">
<summary>
 Sets the area to fill with a solid color. Use with `fillcolor`.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.text">
<summary>
 Sets text elements associated with each (x,y) pair to appear on hover. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.mode">
<summary>
 Determines the drawing mode for this scatter trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.fillcolor">
<summary>
 Sets the fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.fill">
<summary>
 Sets the area to fill with a solid color. Use with `fillcolor`.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergl.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zmin(System.Double)">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zmax(System.Double)">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zauto(System.Boolean)">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.z(System.Object)">
<summary>
 Sets the color values.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.text(System.Object)">
<summary>
 Sets the text elements associated with each location.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.locationssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  locations .
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.locations(System.Object)">
<summary>
 Sets the coordinates via location IDs or names. See `locationmode` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.locationmode(System.Object)">
<summary>
 Determines the set of locations used to match entries in `locations` to regions on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.geo(System.String)">
<summary>
 Sets a reference between this trace&apos;s geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.autocolorscale(System.Boolean)">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zmin">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zmax">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.zauto">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.z">
<summary>
 Sets the color values.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.text">
<summary>
 Sets the text elements associated with each location.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.locationssrc">
<summary>
 Sets the source reference on plot.ly for  locations .
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.locations">
<summary>
 Sets the coordinates via location IDs or names. See `locationmode` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.locationmode">
<summary>
 Determines the set of locations used to match entries in `locations` to regions on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.geo">
<summary>
 Sets a reference between this trace&apos;s geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Choropleth.autocolorscale">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.textpositionsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.textposition(System.Object)">
<summary>
 Sets the positions of the `text` elements with respects to the (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.text(System.String)">
<summary>
 Sets text elements associated with each (lon,lat) pair. or item in `locations`. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (lon,lat) or `locations` coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.mode(System.String)">
<summary>
 Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.lonsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  lon .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.lon(System.Object)">
<summary>
 Sets the longitude coordinates (in degrees East).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.locationssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  locations .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.locations(System.Object)">
<summary>
 Sets the coordinates via location IDs or names. Coordinates correspond to the centroid of each location given. See `locationmode` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.locationmode(System.Object)">
<summary>
 Determines the set of locations used to match entries in `locations` to regions on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.latsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  lat .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.lat(System.Object)">
<summary>
 Sets the latitude coordinates (in degrees North).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.geo(System.String)">
<summary>
 Sets a reference between this trace&apos;s geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.textpositionsrc">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.textposition">
<summary>
 Sets the positions of the `text` elements with respects to the (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.text">
<summary>
 Sets text elements associated with each (lon,lat) pair. or item in `locations`. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (lon,lat) or `locations` coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.mode">
<summary>
 Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.lonsrc">
<summary>
 Sets the source reference on plot.ly for  lon .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.lon">
<summary>
 Sets the longitude coordinates (in degrees East).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.locationssrc">
<summary>
 Sets the source reference on plot.ly for  locations .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.locations">
<summary>
 Sets the coordinates via location IDs or names. Coordinates correspond to the centroid of each location given. See `locationmode` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.locationmode">
<summary>
 Determines the set of locations used to match entries in `locations` to regions on the map.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.latsrc">
<summary>
 Sets the source reference on plot.ly for  lat .
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.lat">
<summary>
 Sets the latitude coordinates (in degrees North).
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scattergeo.geo">
<summary>
 Sets a reference between this trace&apos;s geospatial coordinates and a geographic map. If *geo* (the default value), the geospatial coordinates refer to `layout.geo`. If *geo2*, the geospatial coordinates refer to `layout.geo2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zmin(System.Double)">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zmax(System.Double)">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zauto(System.Boolean)">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.z(System.Object)">
<summary>
 Sets the z coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.text(System.Object)">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.scene(System.String)">
<summary>
 Sets a reference between this trace&apos;s 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.autocolorscale(System.Boolean)">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zmin">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zmax">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.zauto">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.z">
<summary>
 Sets the z coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.text">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.scene">
<summary>
 Sets a reference between this trace&apos;s 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Surface.autocolorscale">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.z(System.Object)">
<summary>
 Sets the z coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.textpositionsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.textposition(System.Object)">
<summary>
 Sets the positions of the `text` elements with respects to the (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.text(System.Object)">
<summary>
 Sets text elements associated with each (x,y,z) triplet. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y,z) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.surfacecolor(System.String)">
<summary>
 Sets the surface fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.surfaceaxis(System.Object)">
<summary>
 If *-1*, the scatter points are not fill with a surface If *0*, *1*, *2*, the scatter points are filled with a Delaunay surface about the x, y, z respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.scene(System.String)">
<summary>
 Sets a reference between this trace&apos;s 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.mode(System.String)">
<summary>
 Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.z">
<summary>
 Sets the z coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.textpositionsrc">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.textposition">
<summary>
 Sets the positions of the `text` elements with respects to the (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.text">
<summary>
 Sets text elements associated with each (x,y,z) triplet. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y,z) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.surfacecolor">
<summary>
 Sets the surface fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.surfaceaxis">
<summary>
 If *-1*, the scatter points are not fill with a surface If *0*, *1*, *2*, the scatter points are filled with a Delaunay surface about the x, y, z respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.scene">
<summary>
 Sets a reference between this trace&apos;s 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.mode">
<summary>
 Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter3d.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zsmooth(System.Object)">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zmin(System.Double)">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zmax(System.Double)">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zauto(System.Boolean)">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.z(System.Object)">
<summary>
 Sets the aggregation data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.ytype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.y(System.Object)">
<summary>
 Sets the sample data to be binned on the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.xtype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.x(System.Object)">
<summary>
 Sets the sample data to be binned on the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.transpose(System.Boolean)">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.text(System.Object)">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.orientation(System.Object)">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.ncontours(System.Int32)">
<summary>
 Sets the number of contour levels.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.nbinsy(System.Int32)">
<summary>
 Sets the number of y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.nbinsx(System.Int32)">
<summary>
 Sets the number of x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.histnorm(System.Object)">
<summary>
 Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.histfunc(System.Object)">
<summary>
 Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.connectgaps(System.Boolean)">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autocontour(System.Boolean)">
<summary>
 Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autocolorscale(System.Boolean)">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autobiny(System.Boolean)">
<summary>
 Determines whether or not the y axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autobinx(System.Boolean)">
<summary>
 Determines whether or not the x axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zsmooth">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zmin">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zmax">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.zauto">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.z">
<summary>
 Sets the aggregation data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.ytype">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.y">
<summary>
 Sets the sample data to be binned on the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.xtype">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.x">
<summary>
 Sets the sample data to be binned on the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.transpose">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.text">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.orientation">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.ncontours">
<summary>
 Sets the number of contour levels.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.nbinsy">
<summary>
 Sets the number of y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.nbinsx">
<summary>
 Sets the number of x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.histnorm">
<summary>
 Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.histfunc">
<summary>
 Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.connectgaps">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autocontour">
<summary>
 Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autocolorscale">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autobiny">
<summary>
 Determines whether or not the y axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2dcontour.autobinx">
<summary>
 Determines whether or not the x axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zsmooth(System.Object)">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zmin(System.Double)">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zmax(System.Double)">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zauto(System.Boolean)">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.z(System.Object)">
<summary>
 Sets the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.ytype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.xtype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.transpose(System.Boolean)">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.text(System.Object)">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.ncontours(System.Int32)">
<summary>
 Sets the number of contour levels.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.connectgaps(System.Boolean)">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.autocontour(System.Boolean)">
<summary>
 Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.autocolorscale(System.Boolean)">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zsmooth">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zmin">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zmax">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.zauto">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.z">
<summary>
 Sets the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.ytype">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.xtype">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.transpose">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.text">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.ncontours">
<summary>
 Sets the number of contour levels.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.connectgaps">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.autocontour">
<summary>
 Determines whether of not the contour level attributes at picked by an algorithm. If *true*, the number of contour levels can be set in `ncontours`. If *false*, set the contour level attributes in `contours`.
</summary>
</member>
<member name="P:XPlot.Plotly.Contour.autocolorscale">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.vertexcolorsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  vertexcolor .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.scene(System.String)">
<summary>
 Sets a reference between this trace&apos;s 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.ksrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  k .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.jsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  j .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.isrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  i .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.intensitysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  intensity .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.facecolorsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  facecolor .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.vertexcolorsrc">
<summary>
 Sets the source reference on plot.ly for  vertexcolor .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.scene">
<summary>
 Sets a reference between this trace&apos;s 3D coordinate system and a 3D scene. If *scene* (the default value), the (x,y,z) coordinates refer to `layout.scene`. If *scene2*, the (x,y,z) coordinates refer to `layout.scene2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.ksrc">
<summary>
 Sets the source reference on plot.ly for  k .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.jsrc">
<summary>
 Sets the source reference on plot.ly for  j .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.isrc">
<summary>
 Sets the source reference on plot.ly for  i .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.intensitysrc">
<summary>
 Sets the source reference on plot.ly for  intensity .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.facecolorsrc">
<summary>
 Sets the source reference on plot.ly for  facecolor .
</summary>
</member>
<member name="P:XPlot.Plotly.Mesh3d.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.valuessrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  values .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.values(System.Object)">
<summary>
 Sets the values of the sectors of this pie chart.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textpositionsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textposition(System.Object)">
<summary>
 Specifies the location of the `textinfo`.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textinfo(System.String)">
<summary>
 Determines which trace information appear on the graph.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.text(System.Object)">
<summary>
 Sets text elements associated with each sector.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.sort(System.Boolean)">
<summary>
 Determines whether or not the sectors of reordered from largest to smallest.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.scalegroup(System.String)">
<summary>
 If there are multiple pies that should be sized according to their totals, link them by providing a non-empty group id here shared by every trace in the same group.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.rotation(System.Double)">
<summary>
 Instead of the first slice starting at 12 o&apos;clock, rotate to some other angle.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.pullsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  pull .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.pull(System.Double)">
<summary>
 Sets the fraction of larger radius to pull the sectors out from the center. This can be a constant to pull all slices apart from each other equally or an array to highlight one or more slices.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.labelssrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  labels .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.labels(System.Object)">
<summary>
 Sets the sector labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.label0(System.Double)">
<summary>
 Alternate to `labels`. Builds a numeric set of labels. Use with `dlabel` where `label0` is the starting label and `dlabel` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.hole(System.Double)">
<summary>
 Sets the fraction of the radius to cut out of the pie. Use this to make a donut chart.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.dlabel(System.Double)">
<summary>
 Sets the label step. See `label0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.direction(System.Object)">
<summary>
 Specifies the direction at which succeeding sectors follow one another.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.valuessrc">
<summary>
 Sets the source reference on plot.ly for  values .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.values">
<summary>
 Sets the values of the sectors of this pie chart.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textpositionsrc">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textposition">
<summary>
 Specifies the location of the `textinfo`.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.textinfo">
<summary>
 Determines which trace information appear on the graph.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.text">
<summary>
 Sets text elements associated with each sector.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.sort">
<summary>
 Determines whether or not the sectors of reordered from largest to smallest.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.scalegroup">
<summary>
 If there are multiple pies that should be sized according to their totals, link them by providing a non-empty group id here shared by every trace in the same group.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.rotation">
<summary>
 Instead of the first slice starting at 12 o&apos;clock, rotate to some other angle.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.pullsrc">
<summary>
 Sets the source reference on plot.ly for  pull .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.pull">
<summary>
 Sets the fraction of larger radius to pull the sectors out from the center. This can be a constant to pull all slices apart from each other equally or an array to highlight one or more slices.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.labelssrc">
<summary>
 Sets the source reference on plot.ly for  labels .
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.labels">
<summary>
 Sets the sector labels.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.label0">
<summary>
 Alternate to `labels`. Builds a numeric set of labels. Use with `dlabel` where `label0` is the starting label and `dlabel` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.hole">
<summary>
 Sets the fraction of the radius to cut out of the pie. Use this to make a donut chart.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.dlabel">
<summary>
 Sets the label step. See `label0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Pie.direction">
<summary>
 Specifies the direction at which succeeding sectors follow one another.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zsmooth(System.Object)">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zmin(System.Double)">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zmax(System.Double)">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zauto(System.Boolean)">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.z(System.Object)">
<summary>
 Sets the aggregation data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.ytype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.y(System.Object)">
<summary>
 Sets the sample data to be binned on the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.xtype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.x(System.Object)">
<summary>
 Sets the sample data to be binned on the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.transpose(System.Boolean)">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.text(System.Object)">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.orientation(System.Object)">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.nbinsy(System.Int32)">
<summary>
 Sets the number of y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.nbinsx(System.Int32)">
<summary>
 Sets the number of x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.histnorm(System.Object)">
<summary>
 Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.histfunc(System.Object)">
<summary>
 Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.connectgaps(System.Boolean)">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.autocolorscale(System.Boolean)">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.autobiny(System.Boolean)">
<summary>
 Determines whether or not the y axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.autobinx(System.Boolean)">
<summary>
 Determines whether or not the x axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zsmooth">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zmin">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zmax">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.zauto">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.z">
<summary>
 Sets the aggregation data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.ytype">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.y">
<summary>
 Sets the sample data to be binned on the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.xtype">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.x">
<summary>
 Sets the sample data to be binned on the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.transpose">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.text">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.orientation">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.nbinsy">
<summary>
 Sets the number of y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.nbinsx">
<summary>
 Sets the number of x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.histnorm">
<summary>
 Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.histfunc">
<summary>
 Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.connectgaps">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.autocolorscale">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.autobiny">
<summary>
 Determines whether or not the y axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram2d.autobinx">
<summary>
 Determines whether or not the x axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.z(System.Object)">
<summary>
 Sets the aggregation data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.y(System.Object)">
<summary>
 Sets the sample data to be binned on the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.x(System.Object)">
<summary>
 Sets the sample data to be binned on the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.tsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.text(System.String)">
<summary>
 Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.t(System.Object)">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.rsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.r(System.Object)">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.orientation(System.Object)">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.nbinsy(System.Int32)">
<summary>
 Sets the number of y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.nbinsx(System.Int32)">
<summary>
 Sets the number of x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.histnorm(System.Object)">
<summary>
 Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.histfunc(System.Object)">
<summary>
 Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.autobiny(System.Boolean)">
<summary>
 Determines whether or not the y axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.autobinx(System.Boolean)">
<summary>
 Determines whether or not the x axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.z">
<summary>
 Sets the aggregation data.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.y">
<summary>
 Sets the sample data to be binned on the y axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.x">
<summary>
 Sets the sample data to be binned on the x axis.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.tsrc">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.text">
<summary>
 Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.t">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.rsrc">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.r">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.orientation">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.nbinsy">
<summary>
 Sets the number of y axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.nbinsx">
<summary>
 Sets the number of x axis bins.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.histnorm">
<summary>
 Specifies the type of normalization used for this histogram trace. If **, the span of each bar corresponds to the number of occurrences (i.e. the number of data points lying inside the bins). If *percent*, the span of each bar corresponds to the percentage of occurrences with respect to the total number of sample points (here, the sum of all bin area equals 100%). If *density*, the span of each bar corresponds to the number of occurrences in a bin divided by the size of the bin interval (here, the sum of all bin area equals the total number of sample points). If *probability density*, the span of each bar corresponds to the probability that an event will fall into the corresponding bin (here, the sum of all bin area equals 1).
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.histfunc">
<summary>
 Specifies the binning function used for this histogram trace. If *count*, the histogram values are computed by counting the number of values lying inside each bin. If *sum*, *avg*, *min*, *max*, the histogram values are computed using the sum, the average, the minimum or the maximum of the values lying inside each bin respectively.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.autobiny">
<summary>
 Determines whether or not the y axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Histogram.autobinx">
<summary>
 Determines whether or not the x axis bin attributes are picked by an algorithm.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zsmooth(System.Object)">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zmin(System.Double)">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zmax(System.Double)">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zauto(System.Boolean)">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.z(System.Object)">
<summary>
 Sets the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.ytype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.xtype(System.Object)">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.transpose(System.Boolean)">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.text(System.Object)">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.showscale(System.Boolean)">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.reversescale(System.Boolean)">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.connectgaps(System.Boolean)">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.colorscale(System.Object)">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.autocolorscale(System.Boolean)">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zsrc">
<summary>
 Sets the source reference on plot.ly for  z .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zsmooth">
<summary>
 Picks a smoothing algorithm use to smooth `z` data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zmin">
<summary>
 Sets the lower bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zmax">
<summary>
 Sets the upper bound of color domain.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.zauto">
<summary>
 Determines the whether or not the color domain is computed with respect to the input data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.z">
<summary>
 Sets the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.ytype">
<summary>
 If *array*, the heatmap&apos;s y coordinates are given by *y* (the default behavior when `y` is provided) If *scaled*, the heatmap&apos;s y coordinates are given by *y0* and *dy* (the default behavior when `y` is not provided)
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.xtype">
<summary>
 If *array*, the heatmap&apos;s x coordinates are given by *x* (the default behavior when `x` is provided). If *scaled*, the heatmap&apos;s x coordinates are given by *x0* and *dx* (the default behavior when `x` is not provided).
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.transpose">
<summary>
 Transposes the z data.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.text">
<summary>
 Sets the text elements associated with each z value.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.showscale">
<summary>
 Determines whether or not a colorbar is displayed for this trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.reversescale">
<summary>
 Reverses the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.connectgaps">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the `z` data are filled in.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.colorscale">
<summary>
 Sets the colorscale.
</summary>
</member>
<member name="P:XPlot.Plotly.Heatmap.autocolorscale">
<summary>
 Determines whether or not the colorscale is picked using the sign of the input z values.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Box.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.y0(System.Object)">
<summary>
 Sets the y coordinate of the box. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.y(System.Object)">
<summary>
 Sets the y sample data or coordinates. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Box.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.x0(System.Object)">
<summary>
 Sets the x coordinate of the box. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.x(System.Object)">
<summary>
 Sets the x sample data or coordinates. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.whiskerwidth(System.Double)">
<summary>
 Sets the width of the whiskers relative to the box&apos; width. For example, with 1, the whiskers are as wide as the box(es).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.pointpos(System.Double)">
<summary>
 Sets the position of the sample points in relation to the box(es). If *0*, the sample points are places over the center of the box(es). Positive (negative) values correspond to positions to the right (left) for vertical boxes and above (below) for horizontal boxes
</summary>
</member>
<member name="P:XPlot.Plotly.Box.orientation(System.Object)">
<summary>
 Sets the orientation of the box(es). If *v* (*h*), the distribution is visualized along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.jitter(System.Double)">
<summary>
 Sets the amount of jitter in the sample points drawn. If *0*, the sample points align along the distribution axis. If *1*, the sample points are drawn in a random jitter of width equal to the width of the box(es).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.fillcolor(System.String)">
<summary>
 Sets the fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.boxpoints(System.Object)">
<summary>
 If *outliers*, only the sample points lying outside the whiskers are shown If *suspectedoutliers*, the outlier points are shown and points either less than 4*Q1-3*Q3 or greater than 4*Q3-3*Q1 are highlighted (see `outliercolor`) If *all*, all sample points are shown If *false*, only the box(es) are shown with no sample points
</summary>
</member>
<member name="P:XPlot.Plotly.Box.boxmean(System.Object)">
<summary>
 If *true*, the mean of the box(es)&apos; underlying distribution is drawn as a dashed line inside the box(es). If *sd* the standard deviation is also drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Box.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.y0">
<summary>
 Sets the y coordinate of the box. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.y">
<summary>
 Sets the y sample data or coordinates. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Box.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.x0">
<summary>
 Sets the x coordinate of the box. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.x">
<summary>
 Sets the x sample data or coordinates. See overview for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.whiskerwidth">
<summary>
 Sets the width of the whiskers relative to the box&apos; width. For example, with 1, the whiskers are as wide as the box(es).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.pointpos">
<summary>
 Sets the position of the sample points in relation to the box(es). If *0*, the sample points are places over the center of the box(es). Positive (negative) values correspond to positions to the right (left) for vertical boxes and above (below) for horizontal boxes
</summary>
</member>
<member name="P:XPlot.Plotly.Box.orientation">
<summary>
 Sets the orientation of the box(es). If *v* (*h*), the distribution is visualized along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.jitter">
<summary>
 Sets the amount of jitter in the sample points drawn. If *0*, the sample points align along the distribution axis. If *1*, the sample points are drawn in a random jitter of width equal to the width of the box(es).
</summary>
</member>
<member name="P:XPlot.Plotly.Box.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.fillcolor">
<summary>
 Sets the fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Box.boxpoints">
<summary>
 If *outliers*, only the sample points lying outside the whiskers are shown If *suspectedoutliers*, the outlier points are shown and points either less than 4*Q1-3*Q3 or greater than 4*Q3-3*Q1 are highlighted (see `outliercolor`) If *all*, all sample points are shown If *false*, only the box(es) are shown with no sample points
</summary>
</member>
<member name="P:XPlot.Plotly.Box.boxmean">
<summary>
 If *true*, the mean of the box(es)&apos; underlying distribution is drawn as a dashed line inside the box(es). If *sd* the standard deviation is also drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.tsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.text(System.Object)">
<summary>
 Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.t(System.Object)">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.rsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.r(System.Object)">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.orientation(System.Object)">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.tsrc">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.text">
<summary>
 Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.t">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.rsrc">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.r">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.orientation">
<summary>
 Sets the orientation of the bars. With *v* (*h*), the value of the each bar spans along the vertical (horizontal).
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Bar.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.x(System.Object)">
<summary>
 Sets the x values - usually time.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.open(System.Object)">
<summary>
 Sets the open values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.low(System.Object)">
<summary>
 Sets the low values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.increasing(System.Object)">
<summary>
 Sets the increasing candles properties.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.high(System.Object)">
<summary>
 Sets the high values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.decreasing(System.Object)">
<summary>
 Sets the decreasing candles properties.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.close(System.Object)">
<summary>
 Sets the close values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.x">
<summary>
 Sets the x values - usually time.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.open">
<summary>
 Sets the open values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.low">
<summary>
 Sets the low values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.increasing">
<summary>
 Sets the increasing candles properties.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.high">
<summary>
 Sets the high values.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.decreasing">
<summary>
 Sets the decreasing candles properties.
</summary>
</member>
<member name="P:XPlot.Plotly.Candlestick.close">
<summary>
 Sets the close values.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.ysrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.yaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.y0(System.Object)">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.y(System.Object)">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.xsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.xaxis(System.String)">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.x0(System.Object)">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.x(System.Object)">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.visible(System.Object)">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.tsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.textsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.textpositionsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.textposition(System.Object)">
<summary>
 Sets the positions of the `text` elements with respects to the (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.text(System.Object)">
<summary>
 Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.t(System.Object)">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.showlegend(System.Boolean)">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.rsrc(System.String)">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.r(System.Object)">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.opacity(System.Double)">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.mode(System.String)">
<summary>
 Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.legendgroup(System.String)">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.hoverinfo(System.String)">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.fillcolor(System.String)">
<summary>
 Sets the fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.fill(System.Object)">
<summary>
 Sets the area to fill with a solid color. Use with `fillcolor`.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.dy(System.Double)">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.dx(System.Double)">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.connectgaps(System.Boolean)">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.ysrc">
<summary>
 Sets the source reference on plot.ly for  y .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.yaxis">
<summary>
 Sets a reference between this trace&apos;s y coordinates and a 2D cartesian y axis. If *y* (the default value), the y coordinates refer to `layout.yaxis`. If *y2*, the y coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.y0">
<summary>
 Alternate to `y`. Builds a linear space of y coordinates. Use with `dy` where `y0` is the starting coordinate and `dy` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.y">
<summary>
 Sets the y coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.xsrc">
<summary>
 Sets the source reference on plot.ly for  x .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.xaxis">
<summary>
 Sets a reference between this trace&apos;s x coordinates and a 2D cartesian x axis. If *x* (the default value), the x coordinates refer to `layout.xaxis`. If *x2*, the x coordinates refer to `layout.xaxis2`, and so on.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.x0">
<summary>
 Alternate to `x`. Builds a linear space of x coordinates. Use with `dx` where `x0` is the starting coordinate and `dx` the step.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.x">
<summary>
 Sets the x coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.visible">
<summary>
 Determines whether or not this trace is visible. If *legendonly*, the trace is not drawn, but can appear as a legend item (provided that the legend itself is visible).
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.tsrc">
<summary>
 Sets the source reference on plot.ly for  t .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.textsrc">
<summary>
 Sets the source reference on plot.ly for  text .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.textpositionsrc">
<summary>
 Sets the source reference on plot.ly for  textposition .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.textposition">
<summary>
 Sets the positions of the `text` elements with respects to the (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.text">
<summary>
 Sets text elements associated with each (x,y) pair. If a single string, the same string appears over all the data points. If an array of string, the items are mapped in order to the this trace&apos;s (x,y) coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.t">
<summary>
 For polar chart only.Sets the angular coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.showlegend">
<summary>
 Determines whether or not an item corresponding to this trace is shown in the legend.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.rsrc">
<summary>
 Sets the source reference on plot.ly for  r .
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.r">
<summary>
 For polar chart only.Sets the radial coordinates.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.opacity">
<summary>
 Sets the opacity of the trace.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.mode">
<summary>
 Determines the drawing mode for this scatter trace. If the provided `mode` includes *text* then the `text` elements appear at the coordinates. Otherwise, the `text` elements appear on hover. If there are less than 20 points, then the default is *lines+markers*. Otherwise, *lines*.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.legendgroup">
<summary>
 Sets the legend group for this trace. Traces part of the same legend group hide/show at the same time when toggling legend items.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.hoverinfo">
<summary>
 Determines which trace information appear on hover.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.fillcolor">
<summary>
 Sets the fill color.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.fill">
<summary>
 Sets the area to fill with a solid color. Use with `fillcolor`.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.dy">
<summary>
 Sets the y coordinate step. See `y0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.dx">
<summary>
 Sets the x coordinate step. See `x0` for more info.
</summary>
</member>
<member name="P:XPlot.Plotly.Scatter.connectgaps">
<summary>
 Determines whether or not gaps (i.e. {nan} or missing values) in the provided data arrays are connected.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithYTitle(System.String,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s Y-axis title.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithXTitle(System.String,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s X-axis title.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithWidth(System.Int32,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s width.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithTitle(System.String,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s title.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithSize(System.Tuple{System.Int32,System.Int32},XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s height.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithPlotlySrc(System.String,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s plotly.js src. Default is https://cdn.plot.ly/plotly-latest.min.js
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithOptions(XPlot.Plotly.Layout.Layout,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s configuration options.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithLegend(System.Boolean,XPlot.Plotly.PlotlyChart)">
<summary>
 Display/hide the legend.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithLabels(System.Collections.Generic.IEnumerable{System.String},XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the data series labels. Use this member if the
 chart&apos;s data is a series collection.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithLabel(System.String,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the data series label. Use this member if the
 chart&apos;s data is a single series.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithId(System.String,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s container div id.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.WithHeight(System.Int32,XPlot.Plotly.PlotlyChart)">
<summary>
 Sets the chart&apos;s height.
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.ShowAll(System.Collections.Generic.IEnumerable{XPlot.Plotly.PlotlyChart})">
<summary>
 Combine charts together and display as a single page in default browser
</summary>
</member>
<member name="M:XPlot.Plotly.Chart.Show(XPlot.Plotly.PlotlyChart)">
<summary>
 Displays a chart in the default browser.
</summary>
</member>
<member name="F:XPlot.Plotly.PlotlyChart.Width@">
<summary>
 The width of the chart container element.
</summary>
</member>
<member name="F:XPlot.Plotly.PlotlyChart.PlotlySrc@">
<summary>
 The plotly.js src.
</summary>
</member>
<member name="F:XPlot.Plotly.PlotlyChart.Id@">
<summary>
 The chart&apos;s container div id.
</summary>
</member>
<member name="F:XPlot.Plotly.PlotlyChart.Height@">
<summary>
 The height of the chart container element.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.Width(System.Int32)">
<summary>
 The width of the chart container element.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.PlotlySrc(System.String)">
<summary>
 The plotly.js src.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.Id(System.String)">
<summary>
 The chart&apos;s container div id.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.Height(System.Int32)">
<summary>
 The height of the chart container element.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.Width">
<summary>
 The width of the chart container element.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.PlotlySrc">
<summary>
 The plotly.js src.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.Id">
<summary>
 The chart&apos;s container div id.
</summary>
</member>
<member name="P:XPlot.Plotly.PlotlyChart.Height">
<summary>
 The height of the chart container element.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithYTitle(System.String)">
<summary>
 Sets the chart&apos;s Y-axis title.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithXTitle(System.String)">
<summary>
 Sets the chart&apos;s X-axis title.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithWidth(System.Int32)">
<summary>
 Sets the chart&apos;s width.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithTitle(System.String)">
<summary>
 Sets the chart&apos;s title.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithSize(System.Int32,System.Int32)">
<summary>
 Sets the chart&apos;s width and height.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithPlotlySrc(System.String)">
<summary>
 Sets the chart&apos;s plotly.js src.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithOptions(XPlot.Plotly.Layout.Layout)">
<summary>
 Sets the chart&apos;s configuration options.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithLegend(System.Boolean)">
<summary>
 Display/hide the legend.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithLayout(XPlot.Plotly.Layout.Layout)">
<summary>
 Sets the chart&apos;s configuration options.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithLabels(System.Collections.Generic.IEnumerable{System.String})">
<summary>
 Sets the data series labels. Use this method if the
 chart&apos;s data is a series collection.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithLabel(System.String)">
<summary>
 Sets the data series label. Use this member if the
 chart&apos;s data is a single series.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithId(System.String)">
<summary>
 Sets the chart&apos;s container div id.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.WithHeight(System.Int32)">
<summary>
 Sets the chart&apos;s height.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.GetPlottingJS">
<summary>
 The chart&apos;s plotting JavaScript code.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.GetInlineJS">
<summary>
 The chart&apos;s inline JavaScript code.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.GetInlineHtml">
<summary>
 Inline markup that can be embedded in a HTML document.
</summary>
</member>
<member name="M:XPlot.Plotly.PlotlyChart.GetHtml">
<summary>
 Returns the chart&apos;s full HTML source.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.width(System.Double)">
<summary>
 Sets the plot&apos;s width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.title(System.String)">
<summary>
 Sets the plot&apos;s title.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.showlegend(System.Boolean)">
<summary>
 Determines whether or not a legend is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.separators(System.String)">
<summary>
 Sets the decimal and thousand separators. For example, *. * puts a &apos;.&apos; before decimals and a space between thousands.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.plot_bgcolor(System.String)">
<summary>
 Sets the color of plotting area in-between x and y axes.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.paper_bgcolor(System.String)">
<summary>
 Sets the color of paper where the graph is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.orientation(System.Double)">
<summary>
 For polar plots only. Rotates the entire polar by the given angle.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.hovermode(System.Object)">
<summary>
 Determines the mode of hover interactions.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.hidesources(System.Boolean)">
<summary>
 Determines whether or not a text link citing the data source is placed at the bottom-right cored of the figure. Has only an effect only on graphs that have been generated via forked graphs from the plotly service (at https://plot.ly or on-premise).
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.height(System.Double)">
<summary>
 Sets the plot&apos;s height (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.dragmode(System.Object)">
<summary>
 Determines the mode of drag interactions.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.direction(System.Object)">
<summary>
 For polar plots only. Sets the direction corresponding to positive angles.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.autosize(System.Object)">
<summary>
 Determines whether or not the dimensions of the figure are computed as a function of the display size.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.width">
<summary>
 Sets the plot&apos;s width (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.title">
<summary>
 Sets the plot&apos;s title.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.showlegend">
<summary>
 Determines whether or not a legend is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.separators">
<summary>
 Sets the decimal and thousand separators. For example, *. * puts a &apos;.&apos; before decimals and a space between thousands.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.plot_bgcolor">
<summary>
 Sets the color of plotting area in-between x and y axes.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.paper_bgcolor">
<summary>
 Sets the color of paper where the graph is drawn.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.orientation">
<summary>
 For polar plots only. Rotates the entire polar by the given angle.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.hovermode">
<summary>
 Determines the mode of hover interactions.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.hidesources">
<summary>
 Determines whether or not a text link citing the data source is placed at the bottom-right cored of the figure. Has only an effect only on graphs that have been generated via forked graphs from the plotly service (at https://plot.ly or on-premise).
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.height">
<summary>
 Sets the plot&apos;s height (in px).
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.dragmode">
<summary>
 Determines the mode of drag interactions.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.direction">
<summary>
 For polar plots only. Sets the direction corresponding to positive angles.
</summary>
</member>
<member name="P:XPlot.Plotly.Layout.Layout.autosize">
<summary>
 Determines whether or not the dimensions of the figure are computed as a function of the display size.
</summary>
</member>
<member name="M:XPlot.Plotly.Html.showInBrowser(System.String,System.String)">
<summary>
 Display given html markup in default browser
</summary>
</member>
</members>
</doc>
